Preparation:

* use ubuntu 20.04 (unstable atm)
* install gnupg2, pinentry-tty, python3-pexpect, rpm, dpkg-sign, rng-tools
* make sure you have full shell access with all variables set like ${HOME} and so on
* optionally execute `update-alternatives --config pinentry` and set it to pinentry-tty
* optionally install python3-pip to upgrade modules
* makefile requires PASSPHRASE env variable set
* execute `make prepare` to install config files.
* execute `make gpgkey` to generate new key if needed.
* set GPG_PASSWORD env variable (from Jenkins or manually)

* Use ubuntu 16.04 (works atm)
* install gnupg2, pinentry-tty, python3.6, python3.6-pip, rpm, debsigs, rng-tools
* install pexpect with pip3.6
* execute `make prepare` to install config files.
* execute `make gpgkey` to generate new key if needed.
* set GPG_PASSWORD env variable (from Jenkins or manually)

* execute `signpackage --package <your package>`

########################################################################################

KEYGRIP way
+ batch processing without dealing with stdin/stdout
+ works everywhere

* run `gpg2 --list-keys --keyid-format LONG` to find the key hash
* run `gpg2 --with-keygrip -K <KEY HASH>` to find KEYGRIP
* execute `/usr/lib/gnupg2/gpg-preset-passphrase --preset --passphrase <password> <KEYGRIP>`
* execute `rpm --addsign <rpm>` or `debsign -K <hash> <debfile>`
* you will not be asked for password and package will be signed
