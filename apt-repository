#!/usr/bin/env python3


from optparse import OptionParser
import pathlib
import sys
import pexpect

PATH = '/tmp/es-repo/apt'
GPGKEY = '0x1234567890'
PACKAGE = None

# Exit codes
ESUCCESS = 0
ENOPACKAGE = 1

distributions = ['jessie', 'stretch', 'buster']
distributions += ['xenial', 'bionic', 'focal']
architectures = ['amd64', 'source']
components = ['main', 'testing']
origin = 'MariaDB Enterprise'
description = 'Enterprise Server test repository'
label = origin

#
parser = OptionParser()
parser.add_option("--initrepo", action="store_true", dest="initrepo",
                  help="Init empty repo structure at <repopath>")
parser.add_option("--repopath", dest="repopath", help="Path to repo directory")
parser.add_option("--gpgkey", dest="gpgkey", help="GPG key to sign with")
parser.add_option("--package", dest="package", help="Package to push to repo")
(options, args) = parser.parse_args()

if options.repopath:
    PATH = options.repopath

if options.gpgkey:
    GPGKEY = options.gpgkey

if options.package:
    PACKAGE = options.package


class Repository():
    """Representing Deb Repository"""

    def __init__(self):
        self.gpgkey = GPGKEY
        self.path = PATH

    def init_repo(self):
        confdir = self.path + '/' + 'conf'
        incoming = self.path + '/' + 'incoming'
        pathlib.Path(confdir).mkdir(parents=True, exist_ok=True)
        pathlib.Path(incoming).mkdir(parents=True, exist_ok=True)
        dist_file = open(confdir + '/' + 'distributions', 'w')
        for dist in distributions:
            dist_file.write('Origin:' + ' ' + origin + '\n')
            dist_file.write('Label:' + ' ' + label + '\n')
            dist_file.write('Codename:' + ' ' + dist + '\n')
            dist_file.write('Architectures:' + ' ' +
                            ' '.join(map(str, architectures)) + '\n')
            dist_file.write('Components:' + ' ' +
                            ' '.join(map(str, components)) + '\n')
            dist_file.write('Description:' + ' ' + description + '\n')
            dist_file.write('SignWith:' + ' ' + GPGKEY + '\n')
            dist_file.write('\n')
        dist_file.close()

        upl_file = open(confdir + '/' + 'uploaders', 'w')
        upl_file.write('allow * by unsigned\n')
        upl_file.close()

        inc_file = open(confdir + '/' + 'incoming', 'w')
        inc_file.write('Name: default\n')
        inc_file.write('IncomingDir: incoming\n')
        inc_file.write('TempDir: tmp\n')
        inc_file.write('Allow: ' + ' '.join(map(str, distributions)) + '\n')
        inc_file.write('Cleanup: on_deny on_error\n')

        #child = pexpect.spawn('reprepro -Vb ' + self.path + ' export')

    def include_debs(self):
        if Path(PACKAGE).is_file():
            pass
        else:
            print(f'E: package {PACKAGE} doesn\'t exist or mistyped!')
            sys.exit(ENOPACKAGE)


zzz = Repository()
if options.initrepo:
    zzz.init_repo()
